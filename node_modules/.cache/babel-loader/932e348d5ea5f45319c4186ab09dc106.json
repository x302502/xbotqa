{"ast":null,"code":"import _classCallCheck from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macintoshhd/Desktop/xbottest/xbotqa/src/page/OnePage.js\";\nimport React, { Component } from 'react';\n\nvar OnePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OnePage, _Component);\n\n  function OnePage(props) {\n    var _this;\n\n    _classCallCheck(this, OnePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OnePage).call(this, props));\n\n    _this.randomInput = function () {\n      var n = _this.randomNumber();\n\n      var arr = [];\n\n      for (var index = 0; index < n; index++) {\n        arr.push(_this.randomNumber());\n      }\n\n      return arr;\n    };\n\n    _this.randomNumber = function () {\n      return Math.floor(Math.random() * 20);\n    };\n\n    _this.handleChangeTex = function (event) {\n      console.log(event.target.value);\n\n      _this.setState({\n        twoRes: event.target.value\n      });\n    };\n\n    _this.resultQuestionOne = function () {\n      var input = _this.randomInput();\n\n      var sum = input.reduce(function (acc, current) {\n        return acc + current;\n      }, 0);\n      var oneRes = {\n        input: input,\n        sum: sum\n      };\n\n      _this.setState({\n        oneRes: oneRes\n      });\n    };\n\n    _this.resultQuestionTwo = function () {\n      var input = _this.randomInput();\n\n      var sum = input.reduce(function (acc, current) {\n        return acc + current;\n      }, 0);\n      var oneRes = {\n        input: input,\n        sum: sum\n      };\n\n      _this.setState({\n        oneRes: oneRes\n      });\n    };\n\n    _this.state = {\n      oneRes: {\n        input: [],\n        sum: 0\n      },\n      twoRes: {\n        input: '',\n        res: 0\n      }\n    };\n    return _this;\n  }\n\n  _createClass(OnePage, [{\n    key: \"fibonaci\",\n    value: function fibonaci(valueInput) {\n      if (valueInput === 1 || valueInput === 2) {\n        return 1;\n      }\n\n      return this.fibonaci(valueInput - 1) + this.fibonaci(valueInput - 2);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var oneRes = this.state.oneRes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" QUESTION 1: \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Input random array:\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, oneRes.input.toString())), React.createElement(\"button\", {\n        onClick: this.resultQuestionOne,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"View Result\"), React.createElement(\"h2\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, oneRes.sum.toString())), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" QUESTION 2: \"), React.createElement(\"input\", {\n        type: \"number\",\n        placeholder: \"please !\",\n        value: this.state.valueSearch,\n        onChange: this.handleChangeTextOne,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.resultQuestionTwo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" View Result \")));\n    }\n  }]);\n\n  return OnePage;\n}(Component);\n\nexport { OnePage as default };","map":{"version":3,"sources":["/Users/macintoshhd/Desktop/xbottest/xbotqa/src/page/OnePage.js"],"names":["React","Component","OnePage","props","randomInput","n","randomNumber","arr","index","push","Math","floor","random","handleChangeTex","event","console","log","target","value","setState","twoRes","resultQuestionOne","input","sum","reduce","acc","current","oneRes","resultQuestionTwo","state","res","valueInput","fibonaci","color","toString","valueSearch","handleChangeTextOne"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\nexport default class OnePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            oneRes: {\n                input: [],\n                sum: 0,\n            },\n            twoRes: {\n                input: '',\n                res: 0\n            }\n        }\n    }\n\n    randomInput = () => {\n        const n = this.randomNumber();\n        let arr = [];\n        for (let index = 0; index < n; index++) {\n            arr.push(this.randomNumber());\n        }\n        return arr;\n    }\n    randomNumber = () => {\n        return Math.floor(Math.random() * 20);\n    }\n\n    fibonaci(valueInput) {\n        if (valueInput === 1 || valueInput === 2) {\n            return 1;\n        }\n        return this.fibonaci(valueInput - 1) + this.fibonaci(valueInput - 2);\n\n    }\n\n    handleChangeTex = (event) => {\n        console.log(event.target.value);\n        this.setState({\n            twoRes: event.target.value\n        })\n    }\n\n    resultQuestionOne = ()=> {\n        const input = this.randomInput();\n        const sum = input.reduce((acc, current) => acc + current, 0);\n        const oneRes = {\n            input,\n            sum\n        }\n        this.setState({\n            oneRes: oneRes\n        })\n    }\n    resultQuestionTwo = ()=> {\n        const input = this.randomInput();\n        const sum = input.reduce((acc, current) => acc + current, 0);\n        const oneRes = {\n            input,\n            sum\n        }\n        this.setState({\n            oneRes: oneRes\n        })\n    }\n    render() {\n        const { oneRes } = this.state;\n        return (\n            <div>\n                <div>\n                    <h1> QUESTION 1: </h1>\n                    <h2>Input random array:</h2>\n                    <div>\n                        <h2 style={{ color: 'blue' }}>\n                            {oneRes.input.toString()}\n                        </h2>\n                    </div>\n                    <button onClick={this.resultQuestionOne}>View Result</button>\n                    <h2 style={{ color: 'red' }}>\n                        {oneRes.sum.toString()}\n                    </h2>\n                </div>\n                <div>\n                    <h1> QUESTION 2: </h1>\n                    <input\n                        type=\"number\"\n                        placeholder=\"please !\"\n                        value={this.state.valueSearch}\n                        onChange={this.handleChangeTextOne} />\n\n                    <button onClick={this.resultQuestionTwo}> View Result </button>\n                </div>\n            </div>\n\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}
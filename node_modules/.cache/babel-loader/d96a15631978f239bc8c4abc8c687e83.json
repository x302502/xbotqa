{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macintoshhd/Desktop/xbottest/xbotqa/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macintoshhd/Desktop/xbottest/xbotqa/src/page/LevelTwoOnePage.js\";\nimport React, { Component } from 'react';\n\nvar LevelTwoOnePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LevelTwoOnePage, _Component);\n\n  function LevelTwoOnePage(props) {\n    var _this;\n\n    _classCallCheck(this, LevelTwoOnePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LevelTwoOnePage).call(this, props));\n    _this.loadData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var options, res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              options = {\n                'method': 'GET',\n                'Content-Type': 'application/json'\n              };\n              _context.next = 4;\n              return fetch('https://xbot.com.vn/standards.json', options);\n\n            case 4:\n              res = _context.sent;\n\n              if (!res) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              data = _context.sent;\n\n              _this.setState({\n                listResult: data\n              });\n\n            case 10:\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 12]]);\n    }));\n\n    _this.handleChangeTexOne = function (event) {\n      _this.setState({\n        inputOne: event.target.value\n      });\n    };\n\n    _this.resultQuestionOne = function () {};\n\n    _this.state = {\n      listResult: [],\n      inputOne: '',\n      resOne: {},\n      inputTwo: ''\n    };\n    return _this;\n  }\n\n  _createClass(LevelTwoOnePage, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.loadData();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.listResult);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" QUESTION 1: \"), React.createElement(\"input\", {\n        type: \"number\",\n        placeholder: \"please !\",\n        value: this.state.inputOne,\n        onChange: this.handleChangeTexOne,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.resultQuestionTwo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" View Result \"), React.createElement(\"h2\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Result\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return LevelTwoOnePage;\n}(Component);\n\nexport { LevelTwoOnePage as default };","map":{"version":3,"sources":["/Users/macintoshhd/Desktop/xbottest/xbotqa/src/page/LevelTwoOnePage.js"],"names":["React","Component","LevelTwoOnePage","props","loadData","options","fetch","res","json","data","setState","listResult","console","log","handleChangeTexOne","event","inputOne","target","value","resultQuestionOne","state","resOne","inputTwo","resultQuestionTwo","color"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGqBC,e;;;;;AAEnB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;AADiB,UAYnBC,QAZmB;AAAA;AAAA;AAAA;AAAA,6BAYR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDC,cAAAA,OAFC,GAES;AACd,0BAAU,KADI;AAEd,gCAAgB;AAFF,eAFT;AAAA;AAAA,qBAMSC,KAAK,CAAC,oCAAD,EAAuCD,OAAvC,CANd;;AAAA;AAMHE,cAAAA,GANG;;AAAA,mBAOHA,GAPG;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQYA,GAAG,CAACC,IAAJ,EARZ;;AAAA;AAQDC,cAAAA,IARC;;AASL,oBAAKC,QAAL,CAAc;AACZC,gBAAAA,UAAU,EAAEF;AADA,eAAd;;AATK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcPG,cAAAA,OAAO,CAACC,GAAR;;AAdO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZQ;;AAAA,UA8BnBC,kBA9BmB,GA8BE,UAACC,KAAD,EAAW;AAC5B,YAAKL,QAAL,CAAc;AACZM,QAAAA,QAAQ,EAAED,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGH,KAlCkB;;AAAA,UAqCnBC,iBArCmB,GAqCC,YAAM,CAEzB,CAvCkB;;AAEjB,UAAKC,KAAL,GAAa;AACXT,MAAAA,UAAU,EAAE,EADD;AAEXK,MAAAA,QAAQ,EAAE,EAFC;AAGXK,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAFiB;AAQlB;;;;;;;;;;;;;uBAEO,KAAKlB,QAAL,E;;;;;;;;;;;;;;;;6BA8BC;AACPQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAL,CAAWT,UAAvB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWJ,QAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKF,kBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAOE;AAAQ,QAAA,OAAO,EAAE,KAAKS,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPF,EASE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAZF,CADF,CADF;AAuBD;;;;EAnE0CvB,S;;SAAxBC,e","sourcesContent":["import React, { Component } from 'react'\n\n\nexport default class LevelTwoOnePage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listResult: [],\n      inputOne: '',\n      resOne: {},\n      inputTwo: '',\n    }\n  }\n  async componentWillMount() {\n    await this.loadData();\n  }\n  loadData = async () => {\n    try {\n      const options = {\n        'method': 'GET',\n        'Content-Type': 'application/json'\n      }\n      let res = await fetch('https://xbot.com.vn/standards.json', options)\n      if (res) {\n        let data = await res.json();\n        this.setState({\n          listResult: data\n        })\n      }\n    } catch (error) {\n      console.log(error);\n\n    }\n  }\n  handleChangeTexOne = (event) => {\n      this.setState({\n        inputOne: event.target.value\n      })\n  }\n\n\n  resultQuestionOne = () => {\n\n  }\n  render() {\n    console.log(this.state.listResult)\n    return (\n      <div>\n        <div>\n          <h1> QUESTION 1: </h1>\n          <input\n            type=\"number\"\n            placeholder=\"please !\"\n            value={this.state.inputOne}\n            onChange={this.handleChangeTexOne} />\n          <button onClick={this.resultQuestionTwo}> View Result </button>\n\n          <h2 style={{ color: 'red' }}>\n              Result\n          </h2>\n          <div>\n            <h5>\n\n            </h5>\n          </div>\n        </div>\n      </div>\n    )\n\n  }\n}"]},"metadata":{},"sourceType":"module"}